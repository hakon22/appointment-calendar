const request = require('request');

class Telegram {

  sendMessageAfterRecord(username, email, phone, stringDate, time) {
    const fields = [
      '‚ÄºÔ∏è<b>–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å</b>‚ÄºÔ∏è',
      `<b>–î–∞—Ç–∞</b>: ${stringDate}`,
      `<b>–í—Ä–µ–º—è</b>: ${time}`,
      `<b>–ò–º—è</b>: ${username}`,
      `<b>–ü–æ—á—Ç–∞</b>: ${email}`,
      `<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: ${phone}`,
    ];
    const msg = encodeURI(fields.reduce((acc, field) => acc += `${field}\n`, ''));
    request.post(`https://api.telegram.org/bot${process.env.TELEGRAM_TOKEN}/sendMessage?chat_id=${process.env.TELEGRAM_CHAT_ID}&parse_mode=html&text=${msg}`, (error, response) => {
      if (response.statusCode === 200) {
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      } else {
        console.log('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram :(');
      }
    });
  }

  sendMessageCancelRecord(username, email, phone, stringDate, time) {
    const fields = [
      'üòï<b>–û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏!</b>üòï',
      `<b>–î–∞—Ç–∞</b>: ${stringDate}`,
      `<b>–í—Ä–µ–º—è</b>: ${time}`,
      `<b>–ò–º—è</b>: ${username}`,
      `<b>–ü–æ—á—Ç–∞</b>: ${email}`,
      `<b>–¢–µ–ª–µ—Ñ–æ–Ω</b>: ${phone}`,
    ];
    const msg = encodeURI(fields.reduce((acc, field) => acc += `${field}\n`, ''));
    request.post(`https://api.telegram.org/bot${process.env.TELEGRAM_TOKEN}/sendMessage?chat_id=${process.env.TELEGRAM_CHAT_ID}&parse_mode=html&text=${msg}`, (error, response) => {
      if (response.statusCode === 200) {
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      } else {
        console.log('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram :(');
      }
    });
  }
}

module.exports = new Telegram();